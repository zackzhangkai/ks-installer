#  "/test" comment will deploy a new kubernetes and KubeSphere in an open Pull Request.

name: Test-PR

on:
  issue_comment:
    types: [created]

jobs:
  pr-check:
    runs-on: ubuntu-latest
    steps:
    - name: acknowledge deployment request to commenter
      id: check
      uses: khan/pull-request-comment-trigger@master
      with:
        trigger: "/test"
        reaction: rocket
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}

  auto-test-pr:
    if: needs.deploy-check.outputs.triggered == 'true'
    runs-on: ubuntu-latest
    needs: pr-check
    steps:
    - name: get pull request ref
      id: get_pull_request_ref
      uses: octokit/request-action@v2.x
      with:
        route: GET /repos/:repository/pulls/:issue_id
        repository: ${{ github.repository }}
        issue_id: ${{ github.event.issue.number }}
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        PR_NUMBER: "${{ github.event.number }}"
    - uses: actions/checkout@v2
      with:
        repository: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.repo.full_name }}
        ref: ${{ fromJson(steps.get_pull_request_ref.outputs.data).head.ref }}

    - name: Build image
      run: docker build . --file Dockerfile --tag kubespheredev/ks-installer:$PR_NUMBER

    - name: Docker login
      uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push image
      run: |
        echo "push image"
        docker push zackzhangkai/ks-installer:$PR_NUMBER

    - name: Create kind cluster
      uses: helm/kind-action@v1.0.0-rc.1

    - name: Deploy KubeSphere to Kind
      run: |
        kubectl apply -f deploy/kubesphere-installer.yaml
        kubectl apply -f deploy/cluster-configuration.yaml
        kubectl set image deploy/ks-installer installer=zackzhangkai/ks-installer:$PR_NUMBER

    - name: Check Cluster Status
      run: bash scripts/check_cluster_status.sh

    - name: slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      if: always()